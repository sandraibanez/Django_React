{"ast":null,"code":"// import { useEffect, useCallback, useState } from \"react\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import { toast } from 'react-toastify';\n// import RentService from \"../services/RentService\";\n\n// export function useRent() {\n//     const navigate = useNavigate();\n//     const [rents, setRents] = useState([]);\n//     const [isCorrect, setIsCorrect] = useState(false);\n//     const { pathname } = useLocation();\n\n//     useEffect(() => {\n//         const path = pathname.split('/')[1];\n//         if (path === 'dashboard') {\n//             RentService.getAllRents()\n//                 .then(({ data, status }) => {\n//                     if (status === 200) {\n//                         setRents(data);\n//                     }\n//                 })\n//                 .catch(e => console.error(e));\n//         }\n//     }, []);\n\n//     const useRentScooter = (slot) => {\n//         RentService.rentScooter(slot)\n//             .then(({ data, status }) => {\n//                 if (status == 200) {\n//                     toast.success(\"Scooter rented, thank you!\")\n//                     setIsCorrect(true);\n//                     setTimeout(() => { setIsCorrect(false); }, 1000);\n//                 }\n//             })\n//             .catch(() => {\n//                 toast.warning(\"You can't rent more than 1 scooter\")\n//             });\n//     }\n\n//     const useBringBackScooter = (slot) => {\n//         RentService.getOneRent()\n//             .then(({ data, status }) => {\n//                 if (status == 200) {\n//                     slot.scooter_id = data.scooter;\n//                     RentService.bringBackScooter(slot)\n//                         .then(({ data, status }) => {\n//                             if (status == 200) {\n//                                 toast.success(\"Scooter bringed back, thank you!\")\n//                                 setIsCorrect(true);\n//                                 setTimeout(() => { setIsCorrect(false); }, 1000);\n//                             }\n//                         })\n//                         .catch((e) => {\n//                             toast.error(e.response.data[0]);\n//                         });\n//                 }\n//             })\n//             .catch(() => {\n//                 toast.warning(\"You don't have any scooter\")\n//             });\n//     }\n\n//     const useDeleteRent = (id) => {\n//         RentService.deleteRent(id)\n//             .then(({ data, status }) => {\n//                 if (status === 200) {\n//                     setRents(rents.filter(rent => rent.id !== id));\n//                     toast.success(data.data);\n//                 }\n//             })\n//             .catch(e => console.error(e));\n//     }\n\n//     return { isCorrect, setIsCorrect, rents, setRents, useRentScooter, useBringBackScooter, useDeleteRent }\n// }","map":{"version":3,"names":[],"sources":["/app/src/hooks/useRent.jsx"],"sourcesContent":["// import { useEffect, useCallback, useState } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import { toast } from 'react-toastify';\r\n// import RentService from \"../services/RentService\";\r\n\r\n// export function useRent() {\r\n//     const navigate = useNavigate();\r\n//     const [rents, setRents] = useState([]);\r\n//     const [isCorrect, setIsCorrect] = useState(false);\r\n//     const { pathname } = useLocation();\r\n\r\n//     useEffect(() => {\r\n//         const path = pathname.split('/')[1];\r\n//         if (path === 'dashboard') {\r\n//             RentService.getAllRents()\r\n//                 .then(({ data, status }) => {\r\n//                     if (status === 200) {\r\n//                         setRents(data);\r\n//                     }\r\n//                 })\r\n//                 .catch(e => console.error(e));\r\n//         }\r\n//     }, []);\r\n\r\n//     const useRentScooter = (slot) => {\r\n//         RentService.rentScooter(slot)\r\n//             .then(({ data, status }) => {\r\n//                 if (status == 200) {\r\n//                     toast.success(\"Scooter rented, thank you!\")\r\n//                     setIsCorrect(true);\r\n//                     setTimeout(() => { setIsCorrect(false); }, 1000);\r\n//                 }\r\n//             })\r\n//             .catch(() => {\r\n//                 toast.warning(\"You can't rent more than 1 scooter\")\r\n//             });\r\n//     }\r\n\r\n//     const useBringBackScooter = (slot) => {\r\n//         RentService.getOneRent()\r\n//             .then(({ data, status }) => {\r\n//                 if (status == 200) {\r\n//                     slot.scooter_id = data.scooter;\r\n//                     RentService.bringBackScooter(slot)\r\n//                         .then(({ data, status }) => {\r\n//                             if (status == 200) {\r\n//                                 toast.success(\"Scooter bringed back, thank you!\")\r\n//                                 setIsCorrect(true);\r\n//                                 setTimeout(() => { setIsCorrect(false); }, 1000);\r\n//                             }\r\n//                         })\r\n//                         .catch((e) => {\r\n//                             toast.error(e.response.data[0]);\r\n//                         });\r\n//                 }\r\n//             })\r\n//             .catch(() => {\r\n//                 toast.warning(\"You don't have any scooter\")\r\n//             });\r\n//     }\r\n\r\n//     const useDeleteRent = (id) => {\r\n//         RentService.deleteRent(id)\r\n//             .then(({ data, status }) => {\r\n//                 if (status === 200) {\r\n//                     setRents(rents.filter(rent => rent.id !== id));\r\n//                     toast.success(data.data);\r\n//                 }\r\n//             })\r\n//             .catch(e => console.error(e));\r\n//     }\r\n    \r\n\r\n//     return { isCorrect, setIsCorrect, rents, setRents, useRentScooter, useBringBackScooter, useDeleteRent }\r\n// }"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}