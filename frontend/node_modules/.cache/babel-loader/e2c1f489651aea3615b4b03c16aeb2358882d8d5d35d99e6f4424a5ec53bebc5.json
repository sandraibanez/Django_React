{"ast":null,"code":"// import {useContext, useCallback, useEffect, useState} from 'react';\n// import BiciService from '../services/BiciService';\n// import BiciContext from \"../context/BiciContext\";\n// import { toast } from \"react-toastify\";\n\n// export function useBici() {\n//     const {bici, setBici} = useContext(BiciContext);\n//     console.log(bici);\n//     const [oneBici, setOneBici] = useState({});\n//     const [isCorrect, setIsCorrect] = useState(false);\n\n//     const useOneBici = useCallback((slug) => {\n//         BiciService.getOneBici(slug)\n//             .then(({data}) => {\n//                 setOneBici(data);\n//             })\n//             .catch(e => console.error(e));\n//     }, [oneBici]);\n\n//     const useAddBici = useCallback(data => {\n//         BiciService.createBici(data)\n//             .then(({ data, status }) => {\n//                 if (status === 200) {\n//                     // toast.success('Bici added successfully');\n//                     setBici([...bici, data]);\n//                     setIsCorrect(true);\n//                     setTimeout(() => { setIsCorrect(false); }, 1000);\n//                 }\n//             })\n//             .catch(e => {\n//                 console.error(e);\n//                 // toast.error('Add new Bici error');\n//             });\n//     }, []);\n\n//     const useUpdateBici = useCallback((slug, data) => {\n//         BiciService.updateBici(slug, data)\n//             .then(({ data, status }) => {\n//                 if (status === 200) {\n//                     let old_Bici = [...bici];\n//                     const index = old_Bici.findIndex(item => item.slug === slug);\n//                     if (index !== -1) {\n//                         old_Bici[index] = data;\n//                         setBici(old_Bici);\n//                     }\n//                     // toast.success('Bici updated successfully');\n//                     setIsCorrect(true);\n//                     setTimeout(() => { setIsCorrect(false); }, 1000);\n//                 }\n//             })\n//             .catch(e => {\n//                 console.error(e);\n//                 // toast.error('Update Bici error');\n//             });\n//     }, []);\n\n//     const useDeleteBici = (slug) => {\n//         BiciService.deleteBici(slug)\n//             .then(({ data, status }) => {\n//                 if (status === 200) {\n//                     // toast.success(data.data);\n//                     setBici(bici.filter(bici => bici.slug !== slug));\n//                 }\n//             })\n//             .catch(e => console.error(e));\n//     } \n\n//     return {  bici, setBici,isCorrect,useOneBici, oneBici, setOneBici, useAddBici, useUpdateBici, useDeleteBici }}","map":{"version":3,"names":[],"sources":["/app/src/hooks/useBici.jsx"],"sourcesContent":["// import {useContext, useCallback, useEffect, useState} from 'react';\r\n// import BiciService from '../services/BiciService';\r\n// import BiciContext from \"../context/BiciContext\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// export function useBici() {\r\n//     const {bici, setBici} = useContext(BiciContext);\r\n//     console.log(bici);\r\n//     const [oneBici, setOneBici] = useState({});\r\n//     const [isCorrect, setIsCorrect] = useState(false);\r\n\r\n//     const useOneBici = useCallback((slug) => {\r\n//         BiciService.getOneBici(slug)\r\n//             .then(({data}) => {\r\n//                 setOneBici(data);\r\n//             })\r\n//             .catch(e => console.error(e));\r\n//     }, [oneBici]);\r\n\r\n//     const useAddBici = useCallback(data => {\r\n//         BiciService.createBici(data)\r\n//             .then(({ data, status }) => {\r\n//                 if (status === 200) {\r\n//                     // toast.success('Bici added successfully');\r\n//                     setBici([...bici, data]);\r\n//                     setIsCorrect(true);\r\n//                     setTimeout(() => { setIsCorrect(false); }, 1000);\r\n//                 }\r\n//             })\r\n//             .catch(e => {\r\n//                 console.error(e);\r\n//                 // toast.error('Add new Bici error');\r\n//             });\r\n//     }, []);\r\n\r\n//     const useUpdateBici = useCallback((slug, data) => {\r\n//         BiciService.updateBici(slug, data)\r\n//             .then(({ data, status }) => {\r\n//                 if (status === 200) {\r\n//                     let old_Bici = [...bici];\r\n//                     const index = old_Bici.findIndex(item => item.slug === slug);\r\n//                     if (index !== -1) {\r\n//                         old_Bici[index] = data;\r\n//                         setBici(old_Bici);\r\n//                     }\r\n//                     // toast.success('Bici updated successfully');\r\n//                     setIsCorrect(true);\r\n//                     setTimeout(() => { setIsCorrect(false); }, 1000);\r\n//                 }\r\n//             })\r\n//             .catch(e => {\r\n//                 console.error(e);\r\n//                 // toast.error('Update Bici error');\r\n//             });\r\n//     }, []);\r\n\r\n//     const useDeleteBici = (slug) => {\r\n//         BiciService.deleteBici(slug)\r\n//             .then(({ data, status }) => {\r\n//                 if (status === 200) {\r\n//                     // toast.success(data.data);\r\n//                     setBici(bici.filter(bici => bici.slug !== slug));\r\n//                 }\r\n//             })\r\n//             .catch(e => console.error(e));\r\n//     } \r\n\r\n//     return {  bici, setBici,isCorrect,useOneBici, oneBici, setOneBici, useAddBici, useUpdateBici, useDeleteBici }}"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}