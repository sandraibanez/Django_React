{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useCallback, useEffect, useState } from 'react';\nimport StationContext from \"../context/StationsContext\";\nimport StationService from '../services/StationService';\nimport SlotService from '../services/SlotService';\nimport { useSlots } from './useSlots';\nexport function useStations() {\n  _s();\n  const {\n    stations,\n    setStations\n  } = useContext(StationContext);\n  const [oneStation, setOneStation] = useState({});\n  const {\n    slots,\n    setSlots\n  } = useSlots();\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [stationSlots, setStationSlots] = useState([]);\n  useEffect(() => {\n    const station = {\n      'station_id': oneStation.id\n    };\n    SlotService.getAllSlots(station).then(_ref => {\n      let {\n        data,\n        status\n      } = _ref;\n      if (status === 200) {\n        setStationSlots(data);\n        console.log(data);\n      }\n    }).catch(e => console.error(e));\n  }, [oneStation]);\n  const useOneStation = useCallback(slug => {\n    console.log(slug);\n    StationService.getOneStation(slug).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setOneStation(data);\n      console.log(data);\n    }).catch(e => console.error(e));\n  }, [oneStation]);\n  const useAddStation = useCallback(data => {\n    let station_data = {\n      \"station\": {\n        direction: data.direction,\n        location: data.location,\n        name: data.name,\n        img: data.img\n      }\n\n      //    \"slot\":{\n      //         num_slot: data.slots\n      //    }\n    };\n\n    StationService.createStation(data, data.slots).then(_ref3 => {\n      let {\n        data,\n        status\n      } = _ref3;\n      if (status === 200) {\n        // toast.success('Station created successfully');\n        setStations([...stations, data]);\n        setIsCorrect(true);\n        setTimeout(() => {\n          setIsCorrect(false);\n        }, 1000);\n      }\n    }).catch(e => {\n      console.error(e);\n      // toast.error('Create station error');\n    });\n  }, []);\n  const useUpdateStation = useCallback((slug, data) => {\n    let station_data = {\n      \"station\": {\n        direction: data.direction,\n        location: data.location,\n        name: data.name,\n        img: data.img\n      },\n      \"slot\": {\n        num_slot: data.num_slot\n      }\n    };\n    StationService.updateStation(slug, data).then(_ref4 => {\n      let {\n        data,\n        status\n      } = _ref4;\n      if (status === 200) {\n        let old_stations = [...stations];\n        const index = old_stations.findIndex(station => station.slug === slug);\n        if (index !== -1) {\n          old_stations[index] = data;\n          setStations(old_stations);\n        }\n        // toast.success('Station updated successfully');\n        setIsCorrect(true);\n        setTimeout(() => {\n          setIsCorrect(false);\n        }, 1000);\n      }\n    }).catch(e => {\n      console.error(e);\n      // toast.error('Create station error');\n    });\n\n    setIsCorrect(true);\n    setTimeout(() => {\n      setIsCorrect(false);\n    }, 1000);\n  }, []);\n  const useDeleteStation = slug => {\n    StationService.deleteStation(slug).then(_ref5 => {\n      let {\n        data,\n        status\n      } = _ref5;\n      if (status === 200) {\n        // toast.success(data.data);\n        setStations(stations.filter(station => station.slug !== slug));\n      }\n    }).catch(e => console.error(e));\n  };\n  // \n  return {\n    isCorrect,\n    stations,\n    setStations,\n    useOneStation,\n    oneStation,\n    setOneStation,\n    setStationSlots,\n    stationSlots,\n    useAddStation,\n    useDeleteStation,\n    useUpdateStation\n  };\n}\n_s(useStations, \"v4yaOBhbtiAE8b4Y+nFfsN5U12Q=\", false, function () {\n  return [useSlots];\n});","map":{"version":3,"names":["useContext","useCallback","useEffect","useState","StationContext","StationService","SlotService","useSlots","useStations","_s","stations","setStations","oneStation","setOneStation","slots","setSlots","isCorrect","setIsCorrect","stationSlots","setStationSlots","station","id","getAllSlots","then","_ref","data","status","console","log","catch","e","error","useOneStation","slug","getOneStation","_ref2","useAddStation","station_data","direction","location","name","img","createStation","_ref3","setTimeout","useUpdateStation","num_slot","updateStation","_ref4","old_stations","index","findIndex","useDeleteStation","deleteStation","_ref5","filter"],"sources":["/app/src/hooks/useStations.jsx"],"sourcesContent":["\r\nimport {useContext, useCallback, useEffect, useState} from 'react';\r\nimport StationContext from \"../context/StationsContext\";\r\nimport StationService from '../services/StationService';\r\nimport SlotService from '../services/SlotService';\r\nimport { useSlots } from './useSlots';\r\n\r\nexport function useStations() {\r\n    const {stations, setStations} = useContext(StationContext);\r\n    const [oneStation, setOneStation] = useState({});\r\n    const { slots, setSlots } = useSlots();\r\n    const [isCorrect, setIsCorrect] = useState(false);\r\n    const [stationSlots, setStationSlots] = useState([]);\r\n    useEffect(() => {\r\n        const station = { 'station_id': oneStation.id };\r\n        SlotService.getAllSlots(station)\r\n            .then(({ data, status }) => {\r\n                if (status === 200) {\r\n                    setStationSlots(data);\r\n                    console.log(data);\r\n                }\r\n            })\r\n            .catch(e => console.error(e));\r\n    }, [oneStation]);\r\n\r\n    const useOneStation = useCallback((slug) => {\r\n        console.log(slug);\r\n        StationService.getOneStation(slug)\r\n            .then(({data}) => {\r\n                setOneStation(data);\r\n                console.log(data);\r\n            })\r\n            .catch(e => console.error(e));\r\n    }, [oneStation]);\r\n\r\n    \r\n    const useAddStation = useCallback(data => {\r\n        let station_data = {\r\n            \"station\":{\r\n                direction: data.direction ,\r\n                location: data.location,\r\n                name: data.name,\r\n                img: data.img\r\n            }\r\n\r\n        //    \"slot\":{\r\n        //         num_slot: data.slots\r\n        //    }\r\n        }\r\n\r\n        StationService.createStation(data,data.slots)\r\n            .then(({ data, status }) => {\r\n                if (status === 200) {\r\n                    // toast.success('Station created successfully');\r\n                    setStations([...stations, data]);\r\n                    setIsCorrect(true);\r\n                    setTimeout(() => { setIsCorrect(false); }, 1000);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                // toast.error('Create station error');\r\n            });\r\n    }, []);\r\n\r\n    const useUpdateStation = useCallback((slug, data) => {\r\n        let station_data = {\r\n            \"station\":{\r\n                direction: data.direction ,\r\n                location: data.location,\r\n                name: data.name,\r\n                img: data.img\r\n            },\r\n           \"slot\":{\r\n                num_slot: data.num_slot\r\n           }\r\n        }\r\n\r\n        StationService.updateStation(slug, data)\r\n            .then(({ data, status }) => {\r\n                if (status === 200) {\r\n                    let old_stations = [...stations];\r\n                    const index = old_stations.findIndex(station => station.slug === slug);\r\n                    if (index !== -1) {\r\n                        old_stations[index] = data;\r\n                        setStations(old_stations);\r\n                    }\r\n                    // toast.success('Station updated successfully');\r\n                    setIsCorrect(true);\r\n                    setTimeout(() => { setIsCorrect(false); }, 1000);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                // toast.error('Create station error');\r\n            });\r\n            setIsCorrect(true);\r\n            setTimeout(() => { setIsCorrect(false); }, 1000);\r\n        }, []);\r\n\r\n    const useDeleteStation = (slug) => {\r\n        StationService.deleteStation(slug)\r\n        .then(({ data, status }) => {\r\n            if (status === 200) {\r\n                // toast.success(data.data);\r\n                setStations(stations.filter(station => station.slug !== slug));\r\n            }\r\n        })\r\n        .catch(e => console.error(e));\r\n    }\r\n// \r\n    return { isCorrect,stations, setStations, useOneStation, oneStation,setOneStation, setStationSlots, stationSlots,useAddStation, useDeleteStation, useUpdateStation}\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}